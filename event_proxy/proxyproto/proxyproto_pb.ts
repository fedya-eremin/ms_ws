// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file proxyproto.proto (package centrifugal.centrifugo.proxy, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proxyproto.proto.
 */
export const file_proxyproto: GenFile = /*@__PURE__*/
  fileDesc("");

/**
 * @generated from message centrifugal.centrifugo.proxy.Disconnect
 */
export type Disconnect = Message<"centrifugal.centrifugo.proxy.Disconnect"> & {
  /**
   * @generated from field: uint32 code = 1;
   */
  code: number;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.Disconnect.
 * Use `create(DisconnectSchema)` to create a new message.
 */
export const DisconnectSchema: GenMessage<Disconnect> = /*@__PURE__*/
  messageDesc(file_proxyproto, 0);

/**
 * @generated from message centrifugal.centrifugo.proxy.Error
 */
export type Error = Message<"centrifugal.centrifugo.proxy.Error"> & {
  /**
   * @generated from field: uint32 code = 1;
   */
  code: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: bool temporary = 3;
   */
  temporary: boolean;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.Error.
 * Use `create(ErrorSchema)` to create a new message.
 */
export const ErrorSchema: GenMessage<Error> = /*@__PURE__*/
  messageDesc(file_proxyproto, 1);

/**
 * @generated from message centrifugal.centrifugo.proxy.ConnectRequest
 */
export type ConnectRequest = Message<"centrifugal.centrifugo.proxy.ConnectRequest"> & {
  /**
   * @generated from field: string client = 1;
   */
  client: string;

  /**
   * @generated from field: string transport = 2;
   */
  transport: string;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol: string;

  /**
   * @generated from field: string encoding = 4;
   */
  encoding: string;

  /**
   * @generated from field: bytes data = 10;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 11;
   */
  b64data: string;

  /**
   * @generated from field: string name = 12;
   */
  name: string;

  /**
   * @generated from field: string version = 13;
   */
  version: string;

  /**
   * @generated from field: repeated string channels = 14;
   */
  channels: string[];
};

/**
 * Describes the message centrifugal.centrifugo.proxy.ConnectRequest.
 * Use `create(ConnectRequestSchema)` to create a new message.
 */
export const ConnectRequestSchema: GenMessage<ConnectRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 2);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubscribeOptions
 */
export type SubscribeOptions = Message<"centrifugal.centrifugo.proxy.SubscribeOptions"> & {
  /**
   * @generated from field: int64 expire_at = 1;
   */
  expireAt: bigint;

  /**
   * @generated from field: bytes info = 2;
   */
  info: Uint8Array;

  /**
   * @generated from field: string b64info = 3;
   */
  b64info: string;

  /**
   * @generated from field: bytes data = 4;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 5;
   */
  b64data: string;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.SubscribeOptionOverride override = 6;
   */
  override?: SubscribeOptionOverride;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubscribeOptions.
 * Use `create(SubscribeOptionsSchema)` to create a new message.
 */
export const SubscribeOptionsSchema: GenMessage<SubscribeOptions> = /*@__PURE__*/
  messageDesc(file_proxyproto, 3);

/**
 * @generated from message centrifugal.centrifugo.proxy.ConnectResult
 */
export type ConnectResult = Message<"centrifugal.centrifugo.proxy.ConnectResult"> & {
  /**
   * @generated from field: string user = 1;
   */
  user: string;

  /**
   * @generated from field: int64 expire_at = 2;
   */
  expireAt: bigint;

  /**
   * @generated from field: bytes info = 3;
   */
  info: Uint8Array;

  /**
   * @generated from field: string b64info = 4;
   */
  b64info: string;

  /**
   * @generated from field: bytes data = 5;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 6;
   */
  b64data: string;

  /**
   * @generated from field: repeated string channels = 7;
   */
  channels: string[];

  /**
   * @generated from field: map<string, centrifugal.centrifugo.proxy.SubscribeOptions> subs = 8;
   */
  subs: { [key: string]: SubscribeOptions };

  /**
   * @generated from field: bytes meta = 9;
   */
  meta: Uint8Array;

  /**
   * @generated from field: repeated centrifugal.centrifugo.proxy.ChannelsCapability caps = 10;
   */
  caps: ChannelsCapability[];
};

/**
 * Describes the message centrifugal.centrifugo.proxy.ConnectResult.
 * Use `create(ConnectResultSchema)` to create a new message.
 */
export const ConnectResultSchema: GenMessage<ConnectResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 4);

/**
 * @generated from message centrifugal.centrifugo.proxy.ChannelsCapability
 */
export type ChannelsCapability = Message<"centrifugal.centrifugo.proxy.ChannelsCapability"> & {
  /**
   * @generated from field: repeated string channels = 1;
   */
  channels: string[];

  /**
   * @generated from field: repeated string allow = 2;
   */
  allow: string[];

  /**
   * @generated from field: string match = 3;
   */
  match: string;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.ChannelsCapability.
 * Use `create(ChannelsCapabilitySchema)` to create a new message.
 */
export const ChannelsCapabilitySchema: GenMessage<ChannelsCapability> = /*@__PURE__*/
  messageDesc(file_proxyproto, 5);

/**
 * @generated from message centrifugal.centrifugo.proxy.ConnectResponse
 */
export type ConnectResponse = Message<"centrifugal.centrifugo.proxy.ConnectResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.ConnectResult result = 1;
   */
  result?: ConnectResult;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Error error = 2;
   */
  error?: Error;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Disconnect disconnect = 3;
   */
  disconnect?: Disconnect;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.ConnectResponse.
 * Use `create(ConnectResponseSchema)` to create a new message.
 */
export const ConnectResponseSchema: GenMessage<ConnectResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 6);

/**
 * @generated from message centrifugal.centrifugo.proxy.RefreshRequest
 */
export type RefreshRequest = Message<"centrifugal.centrifugo.proxy.RefreshRequest"> & {
  /**
   * @generated from field: string client = 1;
   */
  client: string;

  /**
   * @generated from field: string transport = 2;
   */
  transport: string;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol: string;

  /**
   * @generated from field: string encoding = 4;
   */
  encoding: string;

  /**
   * @generated from field: string user = 10;
   */
  user: string;

  /**
   * @generated from field: bytes meta = 11;
   */
  meta: Uint8Array;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.RefreshRequest.
 * Use `create(RefreshRequestSchema)` to create a new message.
 */
export const RefreshRequestSchema: GenMessage<RefreshRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 7);

/**
 * @generated from message centrifugal.centrifugo.proxy.RefreshResult
 */
export type RefreshResult = Message<"centrifugal.centrifugo.proxy.RefreshResult"> & {
  /**
   * @generated from field: bool expired = 1;
   */
  expired: boolean;

  /**
   * @generated from field: int64 expire_at = 2;
   */
  expireAt: bigint;

  /**
   * @generated from field: bytes info = 3;
   */
  info: Uint8Array;

  /**
   * @generated from field: string b64info = 4;
   */
  b64info: string;

  /**
   * @generated from field: bytes meta = 5;
   */
  meta: Uint8Array;

  /**
   * @generated from field: repeated centrifugal.centrifugo.proxy.ChannelsCapability caps = 6;
   */
  caps: ChannelsCapability[];
};

/**
 * Describes the message centrifugal.centrifugo.proxy.RefreshResult.
 * Use `create(RefreshResultSchema)` to create a new message.
 */
export const RefreshResultSchema: GenMessage<RefreshResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 8);

/**
 * @generated from message centrifugal.centrifugo.proxy.RefreshResponse
 */
export type RefreshResponse = Message<"centrifugal.centrifugo.proxy.RefreshResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.RefreshResult result = 1;
   */
  result?: RefreshResult;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Error error = 2;
   */
  error?: Error;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Disconnect disconnect = 3;
   */
  disconnect?: Disconnect;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.RefreshResponse.
 * Use `create(RefreshResponseSchema)` to create a new message.
 */
export const RefreshResponseSchema: GenMessage<RefreshResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 9);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubscribeRequest
 */
export type SubscribeRequest = Message<"centrifugal.centrifugo.proxy.SubscribeRequest"> & {
  /**
   * @generated from field: string client = 1;
   */
  client: string;

  /**
   * @generated from field: string transport = 2;
   */
  transport: string;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol: string;

  /**
   * @generated from field: string encoding = 4;
   */
  encoding: string;

  /**
   * @generated from field: string user = 10;
   */
  user: string;

  /**
   * @generated from field: string channel = 11;
   */
  channel: string;

  /**
   * @generated from field: string token = 12;
   */
  token: string;

  /**
   * @generated from field: bytes meta = 13;
   */
  meta: Uint8Array;

  /**
   * @generated from field: bytes data = 14;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 15;
   */
  b64data: string;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubscribeRequest.
 * Use `create(SubscribeRequestSchema)` to create a new message.
 */
export const SubscribeRequestSchema: GenMessage<SubscribeRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 10);

/**
 * @generated from message centrifugal.centrifugo.proxy.BoolValue
 */
export type BoolValue = Message<"centrifugal.centrifugo.proxy.BoolValue"> & {
  /**
   * @generated from field: bool value = 1;
   */
  value: boolean;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.BoolValue.
 * Use `create(BoolValueSchema)` to create a new message.
 */
export const BoolValueSchema: GenMessage<BoolValue> = /*@__PURE__*/
  messageDesc(file_proxyproto, 11);

/**
 * @generated from message centrifugal.centrifugo.proxy.Int32Value
 */
export type Int32Value = Message<"centrifugal.centrifugo.proxy.Int32Value"> & {
  /**
   * @generated from field: int32 value = 1;
   */
  value: number;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.Int32Value.
 * Use `create(Int32ValueSchema)` to create a new message.
 */
export const Int32ValueSchema: GenMessage<Int32Value> = /*@__PURE__*/
  messageDesc(file_proxyproto, 12);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubscribeOptionOverride
 */
export type SubscribeOptionOverride = Message<"centrifugal.centrifugo.proxy.SubscribeOptionOverride"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.BoolValue presence = 1;
   */
  presence?: BoolValue;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.BoolValue join_leave = 2;
   */
  joinLeave?: BoolValue;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.BoolValue force_recovery = 3;
   */
  forceRecovery?: BoolValue;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.BoolValue force_positioning = 4;
   */
  forcePositioning?: BoolValue;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.BoolValue force_push_join_leave = 5;
   */
  forcePushJoinLeave?: BoolValue;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubscribeOptionOverride.
 * Use `create(SubscribeOptionOverrideSchema)` to create a new message.
 */
export const SubscribeOptionOverrideSchema: GenMessage<SubscribeOptionOverride> = /*@__PURE__*/
  messageDesc(file_proxyproto, 13);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubscribeResult
 */
export type SubscribeResult = Message<"centrifugal.centrifugo.proxy.SubscribeResult"> & {
  /**
   * @generated from field: int64 expire_at = 1;
   */
  expireAt: bigint;

  /**
   * @generated from field: bytes info = 2;
   */
  info: Uint8Array;

  /**
   * @generated from field: string b64info = 3;
   */
  b64info: string;

  /**
   * @generated from field: bytes data = 4;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 5;
   */
  b64data: string;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.SubscribeOptionOverride override = 6;
   */
  override?: SubscribeOptionOverride;

  /**
   * @generated from field: repeated string allow = 7;
   */
  allow: string[];
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubscribeResult.
 * Use `create(SubscribeResultSchema)` to create a new message.
 */
export const SubscribeResultSchema: GenMessage<SubscribeResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 14);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubscribeResponse
 */
export type SubscribeResponse = Message<"centrifugal.centrifugo.proxy.SubscribeResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.SubscribeResult result = 1;
   */
  result?: SubscribeResult;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Error error = 2;
   */
  error?: Error;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Disconnect disconnect = 3;
   */
  disconnect?: Disconnect;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubscribeResponse.
 * Use `create(SubscribeResponseSchema)` to create a new message.
 */
export const SubscribeResponseSchema: GenMessage<SubscribeResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 15);

/**
 * @generated from message centrifugal.centrifugo.proxy.PublishRequest
 */
export type PublishRequest = Message<"centrifugal.centrifugo.proxy.PublishRequest"> & {
  /**
   * @generated from field: string client = 1;
   */
  client: string;

  /**
   * @generated from field: string transport = 2;
   */
  transport: string;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol: string;

  /**
   * @generated from field: string encoding = 4;
   */
  encoding: string;

  /**
   * @generated from field: string user = 10;
   */
  user: string;

  /**
   * @generated from field: string channel = 11;
   */
  channel: string;

  /**
   * @generated from field: bytes data = 12;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 13;
   */
  b64data: string;

  /**
   * @generated from field: bytes meta = 14;
   */
  meta: Uint8Array;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.PublishRequest.
 * Use `create(PublishRequestSchema)` to create a new message.
 */
export const PublishRequestSchema: GenMessage<PublishRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 16);

/**
 * @generated from message centrifugal.centrifugo.proxy.PublishResult
 */
export type PublishResult = Message<"centrifugal.centrifugo.proxy.PublishResult"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 2;
   */
  b64data: string;

  /**
   * @generated from field: bool skip_history = 3;
   */
  skipHistory: boolean;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.PublishResult.
 * Use `create(PublishResultSchema)` to create a new message.
 */
export const PublishResultSchema: GenMessage<PublishResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 17);

/**
 * @generated from message centrifugal.centrifugo.proxy.PublishResponse
 */
export type PublishResponse = Message<"centrifugal.centrifugo.proxy.PublishResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.PublishResult result = 1;
   */
  result?: PublishResult;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Error error = 2;
   */
  error?: Error;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Disconnect disconnect = 3;
   */
  disconnect?: Disconnect;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.PublishResponse.
 * Use `create(PublishResponseSchema)` to create a new message.
 */
export const PublishResponseSchema: GenMessage<PublishResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 18);

/**
 * @generated from message centrifugal.centrifugo.proxy.RPCRequest
 */
export type RPCRequest = Message<"centrifugal.centrifugo.proxy.RPCRequest"> & {
  /**
   * @generated from field: string client = 1;
   */
  client: string;

  /**
   * @generated from field: string transport = 2;
   */
  transport: string;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol: string;

  /**
   * @generated from field: string encoding = 4;
   */
  encoding: string;

  /**
   * @generated from field: string user = 10;
   */
  user: string;

  /**
   * @generated from field: string method = 11;
   */
  method: string;

  /**
   * @generated from field: bytes data = 12;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 13;
   */
  b64data: string;

  /**
   * @generated from field: bytes meta = 14;
   */
  meta: Uint8Array;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.RPCRequest.
 * Use `create(RPCRequestSchema)` to create a new message.
 */
export const RPCRequestSchema: GenMessage<RPCRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 19);

/**
 * @generated from message centrifugal.centrifugo.proxy.RPCResult
 */
export type RPCResult = Message<"centrifugal.centrifugo.proxy.RPCResult"> & {
  /**
   * @generated from field: bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: string b64data = 2;
   */
  b64data: string;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.RPCResult.
 * Use `create(RPCResultSchema)` to create a new message.
 */
export const RPCResultSchema: GenMessage<RPCResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 20);

/**
 * @generated from message centrifugal.centrifugo.proxy.RPCResponse
 */
export type RPCResponse = Message<"centrifugal.centrifugo.proxy.RPCResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.RPCResult result = 1;
   */
  result?: RPCResult;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Error error = 2;
   */
  error?: Error;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Disconnect disconnect = 3;
   */
  disconnect?: Disconnect;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.RPCResponse.
 * Use `create(RPCResponseSchema)` to create a new message.
 */
export const RPCResponseSchema: GenMessage<RPCResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 21);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubRefreshRequest
 */
export type SubRefreshRequest = Message<"centrifugal.centrifugo.proxy.SubRefreshRequest"> & {
  /**
   * @generated from field: string client = 1;
   */
  client: string;

  /**
   * @generated from field: string transport = 2;
   */
  transport: string;

  /**
   * @generated from field: string protocol = 3;
   */
  protocol: string;

  /**
   * @generated from field: string encoding = 4;
   */
  encoding: string;

  /**
   * @generated from field: string user = 10;
   */
  user: string;

  /**
   * @generated from field: string channel = 11;
   */
  channel: string;

  /**
   * @generated from field: bytes meta = 12;
   */
  meta: Uint8Array;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubRefreshRequest.
 * Use `create(SubRefreshRequestSchema)` to create a new message.
 */
export const SubRefreshRequestSchema: GenMessage<SubRefreshRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 22);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubRefreshResult
 */
export type SubRefreshResult = Message<"centrifugal.centrifugo.proxy.SubRefreshResult"> & {
  /**
   * @generated from field: bool expired = 1;
   */
  expired: boolean;

  /**
   * @generated from field: int64 expire_at = 2;
   */
  expireAt: bigint;

  /**
   * @generated from field: bytes info = 3;
   */
  info: Uint8Array;

  /**
   * @generated from field: string b64info = 4;
   */
  b64info: string;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubRefreshResult.
 * Use `create(SubRefreshResultSchema)` to create a new message.
 */
export const SubRefreshResultSchema: GenMessage<SubRefreshResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 23);

/**
 * @generated from message centrifugal.centrifugo.proxy.SubRefreshResponse
 */
export type SubRefreshResponse = Message<"centrifugal.centrifugo.proxy.SubRefreshResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.SubRefreshResult result = 1;
   */
  result?: SubRefreshResult;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Error error = 2;
   */
  error?: Error;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Disconnect disconnect = 3;
   */
  disconnect?: Disconnect;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.SubRefreshResponse.
 * Use `create(SubRefreshResponseSchema)` to create a new message.
 */
export const SubRefreshResponseSchema: GenMessage<SubRefreshResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 24);

/**
 * Publication is an event to be sent to a client.
 * We intentionally make it use the same Protobuf numbers for fields as our client protocol
 * Publication - for now only for consistency.
 *
 * @generated from message centrifugal.centrifugo.proxy.Publication
 */
export type Publication = Message<"centrifugal.centrifugo.proxy.Publication"> & {
  /**
   * @generated from field: bytes data = 4;
   */
  data: Uint8Array;

  /**
   * @generated from field: map<string, string> tags = 7;
   */
  tags: { [key: string]: string };
};

/**
 * Describes the message centrifugal.centrifugo.proxy.Publication.
 * Use `create(PublicationSchema)` to create a new message.
 */
export const PublicationSchema: GenMessage<Publication> = /*@__PURE__*/
  messageDesc(file_proxyproto, 25);

/**
 * @generated from message centrifugal.centrifugo.proxy.StreamSubscribeRequest
 */
export type StreamSubscribeRequest = Message<"centrifugal.centrifugo.proxy.StreamSubscribeRequest"> & {
  /**
   * Centrifugo always sends this within the first message upon user subscription request.
   * It's always not set in the following StreamRequest messages from Centrifugo.
   *
   * @generated from field: centrifugal.centrifugo.proxy.SubscribeRequest subscribe_request = 1;
   */
  subscribeRequest?: SubscribeRequest;

  /**
   * Publication may be set when client publishes to the on-demand stream. If you are using
   * bidirectional stream then Centrifugo assumes publications from client-side are allowed.
   *
   * @generated from field: centrifugal.centrifugo.proxy.Publication publication = 2;
   */
  publication?: Publication;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.StreamSubscribeRequest.
 * Use `create(StreamSubscribeRequestSchema)` to create a new message.
 */
export const StreamSubscribeRequestSchema: GenMessage<StreamSubscribeRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 26);

/**
 * @generated from message centrifugal.centrifugo.proxy.StreamSubscribeResponse
 */
export type StreamSubscribeResponse = Message<"centrifugal.centrifugo.proxy.StreamSubscribeResponse"> & {
  /**
   * SubscribeResponse may optionally be set in the first message from backend to Centrifugo.
   *
   * @generated from field: centrifugal.centrifugo.proxy.SubscribeResponse subscribe_response = 1;
   */
  subscribeResponse?: SubscribeResponse;

  /**
   * Publication goes to client. Can't be set in the first message from backend to Centrifugo.
   *
   * @generated from field: centrifugal.centrifugo.proxy.Publication publication = 2;
   */
  publication?: Publication;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.StreamSubscribeResponse.
 * Use `create(StreamSubscribeResponseSchema)` to create a new message.
 */
export const StreamSubscribeResponseSchema: GenMessage<StreamSubscribeResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 27);

/**
 * @generated from message centrifugal.centrifugo.proxy.NotifyCacheEmptyRequest
 */
export type NotifyCacheEmptyRequest = Message<"centrifugal.centrifugo.proxy.NotifyCacheEmptyRequest"> & {
  /**
   * @generated from field: string channel = 1;
   */
  channel: string;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.NotifyCacheEmptyRequest.
 * Use `create(NotifyCacheEmptyRequestSchema)` to create a new message.
 */
export const NotifyCacheEmptyRequestSchema: GenMessage<NotifyCacheEmptyRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 28);

/**
 * @generated from message centrifugal.centrifugo.proxy.NotifyCacheEmptyResponse
 */
export type NotifyCacheEmptyResponse = Message<"centrifugal.centrifugo.proxy.NotifyCacheEmptyResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.NotifyCacheEmptyResult result = 1;
   */
  result?: NotifyCacheEmptyResult;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.NotifyCacheEmptyResponse.
 * Use `create(NotifyCacheEmptyResponseSchema)` to create a new message.
 */
export const NotifyCacheEmptyResponseSchema: GenMessage<NotifyCacheEmptyResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 29);

/**
 * @generated from message centrifugal.centrifugo.proxy.NotifyCacheEmptyResult
 */
export type NotifyCacheEmptyResult = Message<"centrifugal.centrifugo.proxy.NotifyCacheEmptyResult"> & {
  /**
   * @generated from field: bool populated = 1;
   */
  populated: boolean;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.NotifyCacheEmptyResult.
 * Use `create(NotifyCacheEmptyResultSchema)` to create a new message.
 */
export const NotifyCacheEmptyResultSchema: GenMessage<NotifyCacheEmptyResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 30);

/**
 * @generated from message centrifugal.centrifugo.proxy.NotifyChannelStateRequest
 */
export type NotifyChannelStateRequest = Message<"centrifugal.centrifugo.proxy.NotifyChannelStateRequest"> & {
  /**
   * @generated from field: repeated centrifugal.centrifugo.proxy.ChannelEvent events = 1;
   */
  events: ChannelEvent[];
};

/**
 * Describes the message centrifugal.centrifugo.proxy.NotifyChannelStateRequest.
 * Use `create(NotifyChannelStateRequestSchema)` to create a new message.
 */
export const NotifyChannelStateRequestSchema: GenMessage<NotifyChannelStateRequest> = /*@__PURE__*/
  messageDesc(file_proxyproto, 31);

/**
 * @generated from message centrifugal.centrifugo.proxy.ChannelEvent
 */
export type ChannelEvent = Message<"centrifugal.centrifugo.proxy.ChannelEvent"> & {
  /**
   * @generated from field: int64 time_ms = 1;
   */
  timeMs: bigint;

  /**
   * @generated from field: string channel = 2;
   */
  channel: string;

  /**
   * "occupied" | "vacated" | could be more in the future. Not using enums for better JSON interop.
   *
   * @generated from field: string type = 3;
   */
  type: string;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.ChannelEvent.
 * Use `create(ChannelEventSchema)` to create a new message.
 */
export const ChannelEventSchema: GenMessage<ChannelEvent> = /*@__PURE__*/
  messageDesc(file_proxyproto, 32);

/**
 * @generated from message centrifugal.centrifugo.proxy.NotifyChannelStateResponse
 */
export type NotifyChannelStateResponse = Message<"centrifugal.centrifugo.proxy.NotifyChannelStateResponse"> & {
  /**
   * @generated from field: centrifugal.centrifugo.proxy.NotifyChannelStateResult result = 1;
   */
  result?: NotifyChannelStateResult;

  /**
   * @generated from field: centrifugal.centrifugo.proxy.Error error = 2;
   */
  error?: Error;
};

/**
 * Describes the message centrifugal.centrifugo.proxy.NotifyChannelStateResponse.
 * Use `create(NotifyChannelStateResponseSchema)` to create a new message.
 */
export const NotifyChannelStateResponseSchema: GenMessage<NotifyChannelStateResponse> = /*@__PURE__*/
  messageDesc(file_proxyproto, 33);

/**
 * @generated from message centrifugal.centrifugo.proxy.NotifyChannelStateResult
 */
export type NotifyChannelStateResult = Message<"centrifugal.centrifugo.proxy.NotifyChannelStateResult"> & {
};

/**
 * Describes the message centrifugal.centrifugo.proxy.NotifyChannelStateResult.
 * Use `create(NotifyChannelStateResultSchema)` to create a new message.
 */
export const NotifyChannelStateResultSchema: GenMessage<NotifyChannelStateResult> = /*@__PURE__*/
  messageDesc(file_proxyproto, 34);

/**
 * @generated from service centrifugal.centrifugo.proxy.CentrifugoProxy
 */
export const CentrifugoProxy: GenService<{
  /**
   * Connect to proxy connection authentication and communicate initial state.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.Connect
   */
  connect: {
    methodKind: "unary";
    input: typeof ConnectRequestSchema;
    output: typeof ConnectResponseSchema;
  },
  /**
   * Refresh to proxy decision about connection expiration to the app backend.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.Refresh
   */
  refresh: {
    methodKind: "unary";
    input: typeof RefreshRequestSchema;
    output: typeof RefreshResponseSchema;
  },
  /**
   * Subscribe to proxy subscription attempts to channels.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.Subscribe
   */
  subscribe: {
    methodKind: "unary";
    input: typeof SubscribeRequestSchema;
    output: typeof SubscribeResponseSchema;
  },
  /**
   * Publish to proxy publication attempts to channels.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.Publish
   */
  publish: {
    methodKind: "unary";
    input: typeof PublishRequestSchema;
    output: typeof PublishResponseSchema;
  },
  /**
   * RPC to execute custom logic on the backend over request through the real-time connection.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.RPC
   */
  rPC: {
    methodKind: "unary";
    input: typeof RPCRequestSchema;
    output: typeof RPCResponseSchema;
  },
  /**
   * SubRefresh to proxy decision about subscription expiration to the app backend.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.SubRefresh
   */
  subRefresh: {
    methodKind: "unary";
    input: typeof SubRefreshRequestSchema;
    output: typeof SubRefreshResponseSchema;
  },
  /**
   * SubscribeUnidirectional is an EXPERIMENTAL method which allows handling unidirectional
   * subscription streams. Stream starts with SubscribeRequest similar to Subscribe rpc,
   * then expects StreamSubscribeResponse with SubscribeResponse as first message, and
   * StreamSubscribeResponse with Publication afterwards.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.SubscribeUnidirectional
   */
  subscribeUnidirectional: {
    methodKind: "server_streaming";
    input: typeof SubscribeRequestSchema;
    output: typeof StreamSubscribeResponseSchema;
  },
  /**
   * SubscribeBidirectional is an EXPERIMENTAL method which allows handling bidirectional
   * subscription streams. Stream receives StreamSubscribeRequest. First StreamSubscribeRequest
   * always contains SubscribeRequest, then StreamSubscribeRequest will contain data published
   * by client. Reverse direction works the same way as in SubscribeUnidirectional.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.SubscribeBidirectional
   */
  subscribeBidirectional: {
    methodKind: "bidi_streaming";
    input: typeof StreamSubscribeRequestSchema;
    output: typeof StreamSubscribeResponseSchema;
  },
  /**
   * NotifyCacheEmpty is an EXPERIMENTAL method which allows to load documents from the backend.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.NotifyCacheEmpty
   */
  notifyCacheEmpty: {
    methodKind: "unary";
    input: typeof NotifyCacheEmptyRequestSchema;
    output: typeof NotifyCacheEmptyResponseSchema;
  },
  /**
   * NotifyChannelState can be used to receive channel events such as channel "occupied" and "vacated".
   * This is a feature in a preview state and is only available in Centrifugo PRO.
   *
   * @generated from rpc centrifugal.centrifugo.proxy.CentrifugoProxy.NotifyChannelState
   */
  notifyChannelState: {
    methodKind: "unary";
    input: typeof NotifyChannelStateRequestSchema;
    output: typeof NotifyChannelStateResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_proxyproto, 0);

